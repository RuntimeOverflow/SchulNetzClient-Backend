var ExceptionLevel,Page;(ExceptionLevel=>{ExceptionLevel[ExceptionLevel.Info=0]="Info",ExceptionLevel[ExceptionLevel.Warn=1]="Warn",ExceptionLevel[ExceptionLevel.Error=2]="Error",ExceptionLevel[ExceptionLevel.Fatal=3]="Fatal"})(ExceptionLevel||(ExceptionLevel={}));class Exception{constructor(func,message){this.type="Exception",this.func=func,this.message=message}}class ParserException extends Exception{constructor(){super(...arguments),this.type="ParserException"}}class LinkerException extends Exception{constructor(){super(...arguments),this.type="LinkerException"}}class SchulNetzException extends Exception{constructor(func,message,errorCode){super(func,message),this.type="SchulNetzException",this.errorCode=errorCode}}class JavaScriptException extends Exception{constructor(){super(...arguments),this.type="JavaScriptException"}}function assert(condition,exception){if(!condition)throw exception}function assertInfo(condition,exception){condition||info(exception.message)}function assertWarn(condition,exception){if(!condition)throw exception.level=ExceptionLevel.Warn,warn(exception.message),exception}function assertError(condition,exception){if(!condition)throw exception.level=ExceptionLevel.Error,error(exception.message),exception}function assertFatal(condition,exception){if(!condition)throw exception.level=ExceptionLevel.Fatal,fatal(exception.message),exception}(Page=>{Page[Page.ABSENCES=21111]="ABSENCES",Page[Page.TEACHERS=22352]="TEACHERS",Page[Page.STUDENTS=22348]="STUDENTS",Page[Page.TRANSACTIONS=21411]="TRANSACTIONS",Page[Page.GRADES=21311]="GRADES",Page[Page.SCHEDULE=22202]="SCHEDULE",Page[Page.DOCUMENT_DOWNLOAD=1012]="DOCUMENT_DOWNLOAD",Page.SCHEDULER="scheduler_processor.php"})(Page||(Page={}));class Session{constructor(provider,username,password){for(this._loggedIn=0,this.stateLockQueue=[],this._stableStateRetainCount=0,this.stableStateListeners=[],this._stateChanging=0,this.cookies={},this.sessionTimerRunning=0,provider.startsWith("http://")||provider.startsWith("https://")||(provider="https://"+provider);provider.endsWith("/");)provider=provider.substring(0,provider.length-1);this.provider=provider,this.username=username,this.password=password}verifyPageAndExtractIds(dom){const links=dom.querySelector("#header-menu ul[for=sn-main-menu] > li:nth-child(1) > a");assert(1==links.length,new ParserException("verifyPageAndExtractIds","dom.querySelector('#header-menu ul[for=sn-main-menu] > li:nth-child(1) > a').length != 1"));const{id,transid}=extractQueryParameters(links[0].getAttribute("href"),this.provider)??{};assert(!!id,new ParserException("verifyPageAndExtractIds",`id == null || id == '' (was ${null!=id?"''":void 0})`)),assert(!!transid,new ParserException("verifyPageAndExtractIds",`transid == null || transid == '' (was ${null!=transid?"''":void 0})`)),this.id=id,this.transId=transid}set loggedIn(value){this._loggedIn=value}get loggedIn(){return!!(this._loggedIn&&this.id&&this.transId&&null!=this.lastVisitedPageId)}get stateLock(){return this._stateLock}set stateLock(value){if(this._stateLock=value,value)this.stateChanging=1;else{const next=this.stateLockQueue.pop();next?next[0]():this.stateChanging=0}}get stableStateRetainCount(){return this._stableStateRetainCount}set stableStateRetainCount(value){0==this.stableStateRetainCount&&value>this.stableStateRetainCount?this.stateLock=Symbol():0==value&&value<this.stableStateRetainCount&&(this.stateLock=void 0),this.stateChanging=0,this._stableStateRetainCount=value}get stateChanging(){return this._stateChanging}set stateChanging(value){this._stateChanging=value,value||(this.stableStateListeners.forEach((listener=>listener[0]())),this.stableStateListeners=[])}teardownLockInfrastructure(){this.stableStateListeners.forEach((([,cancel])=>cancel())),this.stableStateListeners=[],this.stateLockQueue.forEach((([,cancel])=>cancel())),this.stateLockQueue=[],this.stateLock=void 0,this.stableStateRetainCount=0,this.stateChanging=0}async acquireStateLock(){try{this.stateLock&&await new Promise(((resolve,reject)=>this.stateLockQueue.push([resolve,reject])))}catch(e){return}const sym=Symbol();return this.stateLock=sym,sym}async acquireStateLockWithPriority(){try{this.stateLock&&await new Promise(((resolve,reject)=>this.stateLockQueue.unshift([resolve,reject])))}catch(e){return}const sym=Symbol();return this.stateLock=sym,sym}async forcefullyAcquireStateLock(){this.stableStateListeners.forEach((([,cancel])=>cancel())),this.stableStateListeners=[],this.stateLockQueue.forEach((([,cancel])=>cancel())),this.stateLockQueue=[];try{this.stateLock&&await new Promise(((resolve,reject)=>this.stateLockQueue.push([resolve,reject])))}catch(e){return}const sym=Symbol();return this.stateLock=sym,sym}releaseStateLock(key){key===this.stateLock&&(this.stateLock=void 0)}async retainStableState(){try{this.stateChanging&&await new Promise(((resolve,reject)=>this.stableStateListeners.push([resolve,reject])))}catch(e){return 0}return this.stableStateRetainCount++,1}releaseStableState(){this.stableStateRetainCount--}get cookieString(){return Object.entries(this.cookies).map((([key,value])=>key+"="+value)).join("; ")}updateCookies(resp){let key,rawHeaders=resp.headers["set-cookie"];assert(!!rawHeaders,new ParserException("updateCookies","!!rawHeaders (was undefined)"));let match,metadata=0;for(;match=/(^.*?)([;=,])/.exec(rawHeaders);)if(match&&3==match.length)if(rawHeaders=rawHeaders.substring(match[0].length).trim(),null==key){if(key=match[1],"="!==match[2])continue}else{if("="===match[2]||metadata||(this.cookies[key.trim()]=match[1].trim()),key=void 0,","===match[2]){metadata=0;continue}metadata=1}}async resetTimeout(){if(!this.loggedIn)return 0;try{const response=await request(`${this.provider}/xajax_js.php?pageid=${this.lastVisitedPageId}&id=${this.id}&transid=${this.transId}`,{method:"POST",body:"xajax=reset_timeout",headers:{Cookie:this.cookieString}});this.updateCookies(response)}catch(e){return this.handleLogout(),0}return 1}async sessionTimer(){if(!this.sessionTimerRunning){this.sessionTimerRunning=1;try{do{const promise=wait(15e5);this.waitKey=promise.waitKey,await promise}while(await this.resetTimeout())}catch(e){}this.sessionTimerRunning=0}}stopSessionTimer(){this.waitKey&&cancelWait(this.waitKey),this.waitKey=void 0}async login(){if(this.loggedIn)return null;let stateLock=await this.acquireStateLockWithPriority();assert(!!stateLock,new Exception("login","Failed to acquire state lock"));try{if(this.loggedIn)return this.releaseStateLock(stateLock),null;let html=await request(this.provider+"/loginto.php");this.updateCookies(html);const loginHashInputs=DOMObject.parse(html.content).querySelector("#standardformular input[type=hidden][name=loginhash]");assert(1==loginHashInputs.length,new ParserException("login",`dom.querySelector('#standardformular input[type=hidden][name=loginhash]').length != 1 (was ${loginHashInputs.length})`));const loginHash=loginHashInputs[0].getAttribute("value");if(assert(!!loginHash,new ParserException("login","loginHash == null || loginHash == '' "+(null!=loginHash?"''":void 0))),html=await request(this.provider+"/index.php",{method:"POST",body:`login=${encodeURIComponent(this.username)}&passwort=${encodeURIComponent(this.password)}&loginhash=${encodeURIComponent(loginHash)}`,headers:{Cookie:this.cookieString},ignoreStatusCode:1}),200!=html.status){if(302==html.status&&html.headers.location){const code=parseInt((extractQueryParameters(html.headers.location)??{}).mode);if(!isNaN(code))return new SchulNetzException("login","login failed",code)}return new SchulNetzException("login",`login failed (HTTP ${html.status})`)}this.updateCookies(html),this.verifyPageAndExtractIds(DOMObject.parse(html.content)),this.loggedIn=1,this.lastVisitedPageId=1,this.sessionTimer()}catch(e){return this.handleLogout(),new SchulNetzException("login",`login failed (threw ${JSON.stringify(e)})`)}finally{this.releaseStateLock(stateLock)}return null}async logout(){if(!this.loggedIn)return void this.handleLogout();const stateLock=await this.forcefullyAcquireStateLock();if(!stateLock)return this.teardownLockInfrastructure(),void this.handleLogout();try{await request(`${this.provider}/index.php?pageid=9999&id=${this.id}&transid=${this.transId}`,{method:"GET",headers:{Cookie:this.cookieString},ignoreStatusCode:1})}finally{this.handleLogout(),this.releaseStateLock(stateLock)}}handleLogout(){this.id=void 0,this.transId=void 0,this.lastVisitedPageId=void 0,this.cookies={},this.loggedIn=0,this.stopSessionTimer()}async fetchPage(pageId,changesState=1,additionalQueryParameters={}){let stateLock;changesState?(stateLock=await this.acquireStateLock(),assert(!!stateLock,new Exception("fetchPage","Failed to acquire state lock"))):assert(await this.retainStableState(),new Exception("fetchPage","Failed to retain stable state")),assert(this.loggedIn,new Exception("fetchPage","Not logged in"));const pageStr="string"==typeof pageId?pageId+"?":`index.php?pageid=${pageId}&`;let html;try{html=(await request(`${this.provider}/${pageStr}id=${this.id}&transid=${this.transId}${Object.entries(additionalQueryParameters).map((([key,value])=>`&${encodeURIComponent(key)}=${encodeURIComponent(value)}`)).join("")}`,{method:"GET",headers:{Cookie:this.cookieString}})).content,changesState&&this.verifyPageAndExtractIds(DOMObject.parse(html))}catch(e){throw this.handleLogout(),e}finally{changesState?stateLock&&this.releaseStateLock(stateLock):this.releaseStableState()}return html}async prefetchPage(pageId,changesState=1,additionalQueryParameters={}){this.lastVisitedPageId!=pageId&&this.fetchPage(pageId,changesState,additionalQueryParameters)}}class ParserResult{constructor(){this.exceptions=[]}}class TeachersParserResult extends ParserResult{constructor(){super(...arguments),this.teachers=[]}}class StudentsParserResult extends ParserResult{constructor(){super(...arguments),this.students=[]}}class TransactionsParserResult extends ParserResult{constructor(){super(...arguments),this.transactions=[]}}class AbsencesParserResult extends ParserResult{constructor(){super(...arguments),this.absences=[],this.absenceReports=[],this.openAbsences=[],this.lateAbsences=[]}}class GradesParserResult extends ParserResult{constructor(){super(...arguments),this.subjects=[],this.grades=[]}}class ScheduleParserResult extends ParserResult{constructor(){super(...arguments),this.lessons=[]}}var ObjectType,Parser={parseTeachers(content){const result=new TeachersParserResult;try{assertError(!!content,new ParserException("parseTeachers",`!!content (was ${null!=content?"''":void 0})`));const lines=content.trim().replace(/[\r\n]+/g,"\n").split("\n");let line;for(assertFatal(lines.length>=1,new ParserException("parseTeachers",`lines.length >= 1 (was ${lines.length})`)),lines.shift();null!=(line=lines.shift());)try{line=line.trim();const matches=Array.from(line.matchAll(/"(([^"]|"")*)"/g));assertFatal(4==matches.length,new ParserException("parseTeachers",`matches.length == 4 (was ${matches.length})`));for(let i=0;i<matches.length;i++)assertFatal(!!matches[i],new ParserException("parseTeachers",`!!matches[${i}] (was undefined)`)),assertFatal(matches[i].length>=2,new ParserException("parseTeachers",`matches[${i}].length >= 2 (was ${matches[i].length})`)),assertFatal("string"==typeof matches[i][1],new ParserException("parseTeachers",`typeof matches[${i}][1] === 'string' (was ${typeof matches[i][1]})`));const teacher={};teacher.id=generateUUID(),teacher.lastName=matches[0][1].trim().replace(/""/g,'"'),teacher.firstName=matches[1][1].trim().replace(/""/g,'"'),teacher.abbreviation=matches[2][1].trim().replace(/""/g,'"'),teacher.email=matches[3][1].trim().replace(/""/g,'"'),result.teachers?.push(teacher)}catch(exception){exception instanceof Exception?result.exceptions.push(exception):result.exceptions.push(new JavaScriptException("parseTeachers",""+exception))}}catch(exception){exception instanceof Exception?result.exceptions.push(exception):result.exceptions.push(new JavaScriptException("parseTeachers",""+exception))}return 0===result.teachers?.length&&(result.teachers=void 0),result},parseStudents(content){const result=new StudentsParserResult;try{assertError(!!content,new ParserException("parseStudents",`!!content (was ${null!=content?"''":void 0})`));const lines=content.trim().replace(/[\r\n]+/g,"\n").split("\n");let line;for(assertError(!!lines,new ParserException("parseStudents",`!!lines (was ${lines})`)),assertFatal(lines.length>0,new ParserException("parseStudents",`lines.length > 0 (was ${lines.length})`)),lines.shift();null!=(line=lines.shift());)try{line=line.trim();const matches=Array.from(line.matchAll(/"(([^"]|"")*)"/g));assertFatal(12==matches.length,new ParserException("parseStudents",`matches.length == 12 (was ${matches.length})`));for(let i=0;i<matches.length;i++)assertFatal(!!matches[i],new ParserException("parseStudents",`!!matches[${i}] (was undefined)`)),assertFatal(matches[i].length>=2,new ParserException("parseStudents",`matches[${i}].length >= 2 (was ${matches[i].length})`)),assertFatal("string"==typeof matches[i][1],new ParserException("parseStudents",`typeof matches[${i}][1] === 'string' (was ${typeof matches[i][1]})`));const student={};switch(student.id=generateUUID(),student.lastName=matches[0][1].trim().replace(/""/g,'"'),student.firstName=matches[1][1].trim().replace(/""/g,'"'),matches[2][1].trim().replace(/""/g,'"')){case"m":student.gender="♂";break;case"w":student.gender="♀";break;default:student.gender="⚧"}student.degree=matches[3][1].trim().replace(/""/g,'"'),student.bilingual="b"===matches[4][1].trim().replace(/""/g,'"'),student.clazz=matches[5][1].trim().replace(/""/g,'"'),student.address=matches[6][1].trim().replace(/""/g,'"'),student.zip=parseInt(matches[7][1].trim().replace(/""/g,'"')),assertError(!isNaN(student.zip),new ParserException("parseStudents","!isNaN(student.zip) (was NaN)")),student.city=matches[8][1].trim().replace(/""/g,'"'),student.phone=matches[9][1].trim().replace(/""/g,'"'),student.additionalClass=matches[10][1].trim().replace(/""/g,'"'),student.status=matches[11][1].trim().replace(/""/g,'"'),result.students?.push(student)}catch(exception){exception instanceof Exception?result.exceptions.push(exception):result.exceptions.push(new JavaScriptException("parseStudents",""+exception))}}catch(exception){exception instanceof Exception?result.exceptions.push(exception):result.exceptions.push(new JavaScriptException("parseStudents",""+exception))}return 0===result.students?.length&&(result.students=void 0),result},parseTransactions(content){const result=new TransactionsParserResult;try{let dom;assertError(!!content,new ParserException("parseTransaction",`!!content (was ${null!=content?"''":void 0})`)),dom=DOMObject.parse(content),assertError(!!dom,new ParserException("parseTransactions","!!dom (was undefined)"));const tables=dom.querySelector("#content-card > table");assertFatal(!!tables,new ParserException("parseTransactions","!!tables (was undefined)")),assertFatal(2==tables.length,new ParserException("parseTransactions",`tables.length == 2 (was ${tables.length})`)),assertFatal(!!tables[0],new ParserException("parseTransactions","!!tables[0] (was undefined)")),assertFatal(!!tables[1],new ParserException("parseTransactions","!!tables[1] (was undefined)"));const nameRows=tables[0].querySelector("tr");assertFatal(2==nameRows.length,new ParserException("parseTransactions",`nameRows.length == 2 (was ${nameRows.length})`));const lastNameFields=nameRows[0].querySelector("td");assertFatal(2==lastNameFields.length,new ParserException("parseTransactions",`lastNameFields.length == 2 (was ${lastNameFields.length})`)),result.lastName=lastNameFields[1].innerText().trim();const firstNameFields=nameRows[1].querySelector("td");assertFatal(2==firstNameFields.length,new ParserException("parseTransactions",`firstNameFields.length == 2 (was ${firstNameFields.length})`)),result.firstName=firstNameFields[1].innerText().trim();const rows=tables[1].querySelector("tr");assertFatal(!!rows,new ParserException("parseTransactions","!!rows (was undefined)")),assertFatal(rows.length>=2,new ParserException("parseTransactions",`rows.length >= 2 (was ${rows.length})`)),rows.shift(),rows.pop();for(let i=0;i<rows.length;i++)rows[i]||(rows.splice(i,1),i--);for(const row of rows)try{const fields=row.querySelector("td");assertFatal(!!fields,new ParserException("parseTransactions","!!fields (was undefined)")),assertFatal(4==fields.length,new ParserException("parseTransactions",`fields.length == 4 (was ${fields.length})`));for(let i=0;i<fields.length;i++)assertFatal(!!fields[i],new ParserException("parseTransactions",`!!fields[${i}] (was undefined)`));const transaction={};transaction.id=generateUUID();const dateHTML=fields[0].innerText()?.trim();assertFatal(!!dateHTML,new ParserException("parseTransactions",`!!dateHTML (was ${null!=dateHTML?"''":void 0})`)),transaction.date=parseDate(dateHTML,"dd.MM.yyyy"),transaction.reason=fields[1].innerText()?.trim(),assertFatal(!!transaction.reason,new ParserException("parseTransactions",`!!transaction.reason (was ${null!=transaction.reason?"''":void 0})`));const amountElement=fields[2].querySelector("span");assertFatal(!!amountElement,new ParserException("parseTransactions","!!amountElement (was undefined)")),assertFatal(1==amountElement.length,new ParserException("parseTransactions",`amountElement.length == 4 (was ${amountElement.length})`)),assertFatal(!!amountElement[0],new ParserException("parseTransactions","!!amountElement[0] (was undefined)"));const amountHTML=amountElement[0].innerText()?.trim();assertFatal(!!amountHTML,new ParserException("parseTransactions",`!!amountHTML (was ${null!=amountHTML?"''":void 0})`)),transaction.amount=parseFloat(amountHTML),assertFatal(!isNaN(transaction.amount),new ParserException("parseTransactions","!isNaN(transaction.amount) (was NaN)")),result.transactions?.push(transaction)}catch(exception){exception instanceof Exception?result.exceptions.push(exception):result.exceptions.push(new JavaScriptException("parseTransactions",""+exception))}}catch(exception){exception instanceof Exception?result.exceptions.push(exception):result.exceptions.push(new JavaScriptException("parseTransactions",""+exception))}return 0===result.transactions?.length&&(result.transactions=void 0),result},parseAbsences(content){const result=new AbsencesParserResult;try{let dom;assertError(!!content,new ParserException("parseAbsences",`!!content (was ${null!=content?"''":void 0})`)),dom=DOMObject.parse(content),assertError(!!dom,new ParserException("parseAbsences","!!dom (was undefined)"));const tables=dom.querySelector("#uebersicht_bloecke > page > div > table");assertFatal(!!tables,new ParserException("parseAbsences","!!tables (was undefined)")),assertFatal(1==tables.length||2==tables.length,new ParserException("parseAbsences",`tables.length == 1 || tables.length == 2 (was ${tables.length})`));for(let i=0;i<tables.length;i++)assertFatal(!!tables[i],new ParserException("parseAbsences",`!!tables[${i}] (was undefined)`));const absenceRows=tables[0].querySelector("table.mdl-data-table > tbody > tr");assertFatal(!!absenceRows,new ParserException("parseAbsences","!!absenceRows (was undefined)")),absenceRows.length>0&&absenceRows[absenceRows.length-1].querySelector("button").length>0&&absenceRows.pop(),assertFatal(absenceRows.length>=3,new ParserException("parseAbsences",`absenceRows.length >= 3 (was ${absenceRows.length})`)),assertFatal((absenceRows.length-3)%2==0,new ParserException("parseAbsences",`(absenceRows.length - 3) % 2 == 0 (was ${absenceRows.length})`)),absenceRows.shift(),absenceRows.pop(),absenceRows.pop();for(let i=0;i<absenceRows.length;i++)absenceRows[i]||(absenceRows.splice(i,1),i--);for(let absenceRowIndex=0;absenceRowIndex<absenceRows.length;absenceRowIndex++)try{const absenceFields=absenceRows[absenceRowIndex].querySelector("td");assertFatal(!!absenceFields,new ParserException("parseAbsences","!!absenceFields (was undefined)")),assertFatal(7==absenceFields.length,new ParserException("parseAbsences",`absenceFields.length == 7 (was ${absenceFields.length})`));for(let i=0;i<absenceFields.length;i++)assertFatal(!!absenceFields[i],new ParserException("parseAbsences",`!!absenceFields[${i}] (was undefined)`));const absence={};absence.id=generateUUID();const absenceFromDateHTML=absenceFields[0].innerText()?.trim();assertFatal(!!absenceFromDateHTML,new ParserException("parseAbsences",`!!absenceFromDateHTML (was ${null!=absenceFromDateHTML?"''":void 0})`));const absenceToDateHTML=absenceFields[1].innerText()?.trim();assertFatal(!!absenceToDateHTML,new ParserException("parseAbsences",`!!absenceToDateHTML (was ${null!=absenceToDateHTML?"''":void 0})`)),absence.startDate=parseDate(absenceFromDateHTML,"dd.MM.yyyy"),assertFatal(!!absence.startDate,new ParserException("parseAbsences","!!absence.startDate (was undefined)")),absence.endDate=parseDate(absenceToDateHTML,"dd.MM.yyyy"),assertFatal(!!absence.endDate,new ParserException("parseAbsences","!!absence.endDate (was undefined)")),absence.reason=absenceFields[2].innerText()?.trim(),assertFatal(null!=absence.reason,new ParserException("parseAbsences","absence.reason (was undefined)")),absence.additionalInfo=absenceFields[3].innerText()?.trim(),assertFatal(null!=absence.additionalInfo,new ParserException("parseAbsences","absence.additionalInfo (was undefined)")),absence.deadline=absenceFields[4].innerText()?.trim(),assertFatal(null!=absence.deadline,new ParserException("parseAbsences","absence.deadline (was undefined)"));const excused=absenceFields[5].innerText()?.trim();assertFatal(null!=excused,new ParserException("parseAbsences","excused (was undefined)")),absence.excused="Ja"===excused;const lessonCount=absenceFields[6].innerText()?.trim();let reportsTable;if(assertFatal(null!=lessonCount,new ParserException("parseAbsences","lessonCount (was undefined)")),absence.lessonCount=parseInt(lessonCount),assertFatal(!isNaN(absence.lessonCount),new ParserException("parseAbsences","!isNaN(absence.lessonCount) (was NaN)")),result.absences?.push(absence),absenceRowIndex+1<absenceRows.length&&([reportsTable]=absenceRows[absenceRowIndex+1].querySelector("tr table"))&&reportsTable){absenceRowIndex++;const absenceReportRows=reportsTable.querySelector("tr");assertFatal(!!absenceReportRows,new ParserException("parseAbsences","!!absenceReportRows (was undefined)")),assertFatal(absenceReportRows.length>=2,new ParserException("parseAbsences",`absenceReportRows.length >= 2 (was ${absenceReportRows.length})`));for(let i=0;i<absenceReportRows.length;i++)assertFatal(!!absenceReportRows[i],new ParserException("parseAbsences",`!!absenceReportRows[${i}] (was undefined)`));absenceReportRows.shift(),absenceReportRows.shift();for(let absenceReportRowIndex=0;absenceReportRowIndex<absenceReportRows.length;absenceReportRowIndex++)try{const absenceReportFields=absenceReportRows[absenceReportRowIndex].querySelector("td");assertFatal(!!absenceReportFields,new ParserException("parseAbsences","!!absenceReportFields (was undefined)")),assertFatal(4==absenceReportFields.length,new ParserException("parseAbsences",`absenceReportFields.length == 7 (was ${absenceReportFields.length})`));for(let i=0;i<absenceReportFields.length;i++)assertFatal(!!absenceReportFields[i],new ParserException("parseAbsences",`!!absenceReportFields[${i}] (was undefined)`));const absenceReport={};absenceReport.id=generateUUID(),absenceReport.absenceId=absence.id;const absenceReportDateHTML=absenceReportFields[0].innerText()?.trim();assertFatal(!!absenceReportDateHTML,new ParserException("parseAbsences",`!!absenceReportDateHTML (was ${null!=absenceReportDateHTML?"''":void 0})`));const absenceReportTimeHTML=absenceReportFields[1].innerText()?.trim();assertFatal(!!absenceReportTimeHTML,new ParserException("parseAbsences",`!!absenceReportTimeHTML (was ${null!=absenceReportTimeHTML?"''":void 0})`));const[absenceReportStartTime,absenceReportEndTime]=absenceReportTimeHTML.split("bis").map((str=>str.trim()));assertFatal(!!absenceReportStartTime,new ParserException("parseAbsences",`!!absenceReportStartTime (was ${null!=absenceReportStartTime?"''":void 0})`)),assertFatal(!!absenceReportEndTime,new ParserException("parseAbsences",`!!absenceReportEndTime (was ${null!=absenceReportEndTime?"''":void 0})`)),absenceReport.startDate=parseDate(`${absenceReportDateHTML} ${absenceReportStartTime}`,"dd.MM.yyyy HH:mm"),assertFatal(!!absenceReport.startDate,new ParserException("parseAbsences","!!absenceReport.startDate (was undefined)")),absenceReport.endDate=parseDate(`${absenceReportDateHTML} ${absenceReportEndTime}`,"dd.MM.yyyy HH:mm"),assertFatal(!!absenceReport.endDate,new ParserException("parseAbsences","!!absenceReport.endDate (was undefined)")),absenceReport.lessonAbbreviation=absenceReportFields[2].innerText()?.trim(),assertFatal(null!=absenceReport.lessonAbbreviation,new ParserException("parseAbsences","absenceReport.lessonAbbreviation (was undefined)")),absenceReport.comment=absenceReportFields[3].innerText()?.trim(),assertFatal(null!=absenceReport.comment,new ParserException("parseAbsences","absenceReport.comment (was undefined)")),result.absenceReports?.push(absenceReport)}catch(exception){exception instanceof Exception?result.exceptions.push(exception):result.exceptions.push(new JavaScriptException("parseAbsences",""+exception))}}}catch(exception){exception instanceof Exception?result.exceptions.push(exception):result.exceptions.push(new JavaScriptException("parseAbsences",""+exception))}const openAbsencesTables=dom.querySelector("#uebersicht_bloecke > page form > table");assertFatal(!!openAbsencesTables,new ParserException("parseAbsences","!!openAbsencesTables (was undefined)")),assertFatal(1==openAbsencesTables.length,new ParserException("parseAbsences",`openAbsencesTables.length == 1 (was ${openAbsencesTables.length})`));for(let i=0;i<openAbsencesTables.length;i++)assertFatal(!!openAbsencesTables[i],new ParserException("parseAbsences",`!!openAbsencesTables[${i}] (was undefined)`));const openAbsenceRows=openAbsencesTables[0].querySelector("tr");assertFatal(!!openAbsenceRows,new ParserException("parseAbsences","!!openAbsenceRows (was undefined)")),assertFatal(openAbsenceRows.length>=3,new ParserException("parseAbsences",`openAbsenceRows.length >= 3 (was ${openAbsenceRows.length})`)),openAbsenceRows.shift(),openAbsenceRows.pop(),openAbsenceRows.pop();for(let i=0;i<openAbsenceRows.length;i++)openAbsenceRows[i]||(openAbsenceRows.splice(i,1),i--);for(const openAbsenceRow of openAbsenceRows)try{const openAbsenceFields=openAbsenceRow.querySelector("td");assertFatal(!!openAbsenceFields,new ParserException("parseAbsences","!!openAbsenceFields (was undefined)")),assertFatal(4==openAbsenceFields.length,new ParserException("parseAbsences",`openAbsenceFields.length == 4 (was ${openAbsenceFields.length})`));for(let i=0;i<openAbsenceFields.length;i++)assertFatal(!!openAbsenceFields[i],new ParserException("parseAbsences",`!!openAbsenceFields[${i}] (was undefined)`));const openAbsence={};openAbsence.id=generateUUID();const openAbsenceDateHTML=openAbsenceFields[0].innerText()?.trim();assertFatal(!!openAbsenceDateHTML,new ParserException("parseAbsences",`!!openAbsenceDateHTML (was ${null!=openAbsenceDateHTML?"''":void 0})`));const openAbsenceTimeHTML=openAbsenceFields[1].innerText()?.trim();assertFatal(!!openAbsenceTimeHTML,new ParserException("parseAbsences",`!!openAbsenceTimeHTML (was ${null!=openAbsenceTimeHTML?"''":void 0})`)),assertFatal(1==Array.from(openAbsenceTimeHTML.matchAll(/-/g)).length,new ParserException("parseAbsences",`Array.from(openAbsenceTimeHTML.matchAll(/-/g)).length == 1 (was ${Array.from(openAbsenceTimeHTML.matchAll(/-/g)).length})`));const[openAbsenceFromTime,openAbsenceToTime]=openAbsenceTimeHTML.split("-").map((str=>str.trim()));openAbsence.startDate=parseDate(`${openAbsenceDateHTML} ${openAbsenceFromTime}`,"dd.MM.yyyy HH:mm"),assertFatal(!!openAbsence.startDate,new ParserException("parseAbsences","!!openAbsence.startDate (was undefined)")),openAbsence.endDate=parseDate(`${openAbsenceDateHTML} ${openAbsenceToTime}`,"dd.MM.yyyy HH:mm"),assertFatal(!!openAbsence.endDate,new ParserException("parseAbsences","!!openAbsence.endDate (was undefined)")),openAbsence.lessonAbbreviation=openAbsenceFields[2].innerText()?.trim(),assertFatal(null!=openAbsence.lessonAbbreviation,new ParserException("parseAbsences","openAbsence.lessonAbbreviation (was undefined)")),result.openAbsences?.push(openAbsence)}catch(exception){exception instanceof Exception?result.exceptions.push(exception):result.exceptions.push(new JavaScriptException("parseAbsences",""+exception))}if(2==tables.length){const lateAbsenceTableRows=tables[1].querySelector("tr");assertFatal(!!lateAbsenceTableRows,new ParserException("parseAbsences","!!lateAbsenceTableRows (was undefined)")),assertFatal(lateAbsenceTableRows.length>=3,new ParserException("parseAbsences",`lateAbsenceTableRows.length >= 3 (was ${lateAbsenceTableRows.length})`)),lateAbsenceTableRows.shift(),lateAbsenceTableRows.pop(),lateAbsenceTableRows.pop();for(let i=0;i<lateAbsenceTableRows.length;i++)lateAbsenceTableRows[i]||(lateAbsenceTableRows.splice(i,1),i--);for(const lateAbsenceRow of lateAbsenceTableRows)try{const lateAbsenceFields=lateAbsenceRow.querySelector("td");assertFatal(!!lateAbsenceFields,new ParserException("parseAbsences","!!lateAbsenceFields (was undefined)")),assertFatal(5==lateAbsenceFields.length,new ParserException("parseAbsences",`lateAbsenceFields.length == 5 (was ${lateAbsenceFields.length})`));for(let i=0;i<lateAbsenceFields.length;i++)assertFatal(!!lateAbsenceFields[i],new ParserException("parseAbsences",`!!lateAbsenceFields[${i}] (was undefined)`));const lateAbsence={};lateAbsence.id=generateUUID();let lateAbsenceDateHTML=lateAbsenceFields[0].innerText()?.replaceAll("(*)","")?.trim();assertFatal(!!lateAbsenceDateHTML,new ParserException("parseAbsences",`!!lateAbsenceDateHTML (was ${null!=lateAbsenceDateHTML?"''":void 0})`));const commaSeparated=lateAbsenceDateHTML.split(",");assertFatal(2==commaSeparated.length,new ParserException("parseAbsences",`commaSeparated.length == 2 (was ${commaSeparated.length})`)),lateAbsenceDateHTML=commaSeparated[1].trim();const lateAbsenceTimeHTML=lateAbsenceFields[1].innerText()?.trim();assertFatal(!!lateAbsenceTimeHTML,new ParserException("parseAbsences",`!!lateAbsenceTimeHTML (was ${null!=lateAbsenceTimeHTML?"''":void 0})`)),lateAbsence.date=parseDate(`${lateAbsenceDateHTML} ${lateAbsenceTimeHTML}`,"dd.MM.yyyy HH:mm"),assertFatal(!!lateAbsence.date,new ParserException("parseAbsences","!!lateAbsence.date (was undefined)")),lateAbsence.reason=lateAbsenceFields[2].innerText()?.trim(),assertFatal(null!=lateAbsence.reason,new ParserException("parseAbsences","lateAbsence.reason != undefined (was undefined)"));const timespan=lateAbsenceFields[3].innerText()?.trim();assertFatal(!!timespan,new ParserException("parseAbsences",`!!timespan (was ${null!=timespan?"''":void 0})`)),lateAbsence.timespan=parseInt(timespan),assertFatal(!isNaN(lateAbsence.timespan),new ParserException("parseAbsences","!isNaN(lateAbsence.timespan) (was NaN)"));const excused=lateAbsenceFields[4].innerText()?.trim();assertFatal(!!excused,new ParserException("parseAbsences",`!!excused (was ${null!=excused?"''":void 0})`)),lateAbsence.excused="Ja"===excused,result.lateAbsences?.push(lateAbsence)}catch(exception){exception instanceof Exception?result.exceptions.push(exception):result.exceptions.push(new JavaScriptException("parseAbsences",""+exception))}}}catch(exception){exception instanceof Exception?result.exceptions.push(exception):result.exceptions.push(new JavaScriptException("parseAbsences",""+exception))}return 0===result.absences?.length&&(result.absences=void 0),0===result.absenceReports?.length&&(result.absenceReports=void 0),0===result.openAbsences?.length&&(result.openAbsences=void 0),0===result.lateAbsences?.length&&(result.lateAbsences=void 0),result},parseGrades(content){const result=new GradesParserResult;try{let dom;assertError(!!content,new ParserException("parseGrades",`!!content (was ${null!=content?"''":void 0})`)),dom=DOMObject.parse(content),assertError(!!dom,new ParserException("parseGrades","!!dom (was undefined)"));const subjectRows=dom.querySelector("#uebersicht_bloecke > page > div > table > tbody > tr");assertFatal(!!subjectRows,new ParserException("parseGrades","!!subjectRows (was undefined)")),assertFatal(subjectRows.length>=1,new ParserException("parseGrades",`subjectRows.length >= 1 (was ${subjectRows.length})`));for(let i=0;i<subjectRows.length;i++)assertFatal(!!subjectRows[i],new ParserException("parseGrades",`!!subjectRows[${i}] (was undefined)`));subjectRows.shift();for(let subjectRowIndex=0;subjectRowIndex<subjectRows.length;subjectRowIndex++)try{const subjectFields=subjectRows[subjectRowIndex].querySelector("td");assertFatal(!!subjectFields,new ParserException("parseGrades","!!subjectFields (was undefined)")),assertFatal(5==subjectFields.length,new ParserException("parseGrades",`subjectFields.length == 5 (was ${subjectFields.length})`));for(let i=0;i<subjectFields.length;i++)assertFatal(!!subjectFields[i],new ParserException("parseGrades",`!!subjectFields[${i}] (was undefined)`));const subject={};subject.id=generateUUID();const b=subjectFields[0].querySelector("b");assertFatal(!!b,new ParserException("parseGrades","!!b (was undefined)")),assertFatal(1==b.length,new ParserException("parseGrades",`b.length == 1 (was ${b.length})`));for(let i=0;i<b.length;i++)assertFatal(!!b[i],new ParserException("parseGrades",`!!b[${i}] (was undefined)`));subject.abbreviation=b[0].innerText()?.trim(),assertFatal(null!=subject.abbreviation,new ParserException("parseGrades","subject.abbreviation != undefined (was undefined)")),subject.name=subjectFields[0].innerText()?.trim(),assertFatal(null!=subject.name,new ParserException("parseGrades","subject.name != undefined (was undefined)")),subject.hiddenGrades=subjectFields[1].innerText()?.includes("*")??0;const a=subjectFields[3].querySelector("a");let gradesRow;assertFatal(!!a,new ParserException("parseGrades","!!a (was undefined)")),subject.gradesConfirmed=0>=a.length,result.subjects?.push(subject);const gradeRows=[];for(;subjectRowIndex+1<subjectRows.length&&subjectRows[subjectRowIndex+1].getAttribute("class")?.includes("detailrow");)if(subjectRowIndex++,(gradesRow=subjectRows[subjectRowIndex].querySelector("table"))&&1==gradesRow.length&&gradesRow[0]){const rows=gradesRow[0].querySelector("tr");assertFatal(!!rows,new ParserException("parseGrades","!!rows (was undefined)")),gradeRows.push(...rows)}if(gradeRows.length>0){assertFatal(gradeRows.length>=2,new ParserException("parseGrades",`gradeRows.length >= 2 (was ${gradeRows.length})`));for(let i=0;i<gradeRows.length;i++)assertFatal(!!gradeRows[i],new ParserException("parseGrades",`!!gradeRows[${i}] (was undefined)`));gradeRows.shift();let gradeTotal=0,weightTotal=0;for(let gradeRowIndex=0;gradeRowIndex<gradeRows.length;gradeRowIndex++)try{const gradeFields=gradeRows[gradeRowIndex].querySelector("td");if(assertFatal(!!gradeFields,new ParserException("parseGrades","!!gradeFields (was undefined)")),2==gradeFields.length&&gradeRowIndex+1==gradeRows.length)continue;assertFatal(4==gradeFields.length,new ParserException("parseGrades",`gradeFields.length == 4 (was ${gradeFields.length})`));for(let i=0;i<gradeFields.length;i++)assertFatal(!!gradeFields[i],new ParserException("parseGrades",`!!gradeFields[${i}] (was undefined)`));const grade={};grade.id=generateUUID(),grade.subjectId=subject.id;const gradeDateHTML=gradeFields[0].innerText()?.trim();gradeDateHTML&&(grade.date=parseDate(""+gradeDateHTML,"dd.MM.yyyy"),assertWarn(!!grade.date,new ParserException("parseGrades","!!grade.date (was undefined)"))),grade.topic=gradeFields[1].innerText()?.trim(),assertFatal(null!=grade.topic,new ParserException("parseGrades","grade.topic (was undefined)"));const gradeHTML=gradeFields[2].innerText()?.trim();grade.grade=gradeHTML?parseFloat(gradeHTML):void 0,null!=grade.grade&&isNaN(grade.grade)&&(grade.grade=void 0);const detailsDiv=gradeFields[2].querySelector("div");if(detailsDiv&&1==detailsDiv.length&&detailsDiv[0]&&(grade.details=detailsDiv[0].innerText()?.trim()),grade.weight=parseFloat(gradeFields[3].innerText()?.trim()),assertFatal(!isNaN(grade.weight),new ParserException("parseGrades","!isNaN(grade.weight) (was NaN)")),grade.grade){const weight=grade.weight??1;gradeTotal+=grade.grade*weight,weightTotal+=weight}result.grades?.push(grade)}catch(exception){exception instanceof Exception?result.exceptions.push(exception):result.exceptions.push(new JavaScriptException("parseGrades",""+exception))}subject.average=weightTotal>0?gradeTotal/weightTotal:void 0}subjectRowIndex+1<subjectRows.length&&subjectRows[subjectRowIndex+1].getAttribute("id")?.includes("schueleruebersicht_verlauf")&&subjectRowIndex++}catch(exception){exception instanceof Exception?result.exceptions.push(exception):result.exceptions.push(new JavaScriptException("parseGrades",""+exception))}}catch(exception){exception instanceof Exception?result.exceptions.push(exception):result.exceptions.push(new JavaScriptException("parseGrades",""+exception))}return 0===result.subjects?.length&&(result.subjects=void 0),0===result.grades?.length&&(result.grades=void 0),result},parseSchedule(content){const result=new ScheduleParserResult;try{let dom;assertError(!!content,new ParserException("parseSchedule",`!!content (was ${null!=content?"''":void 0})`)),dom=DOMObject.parse(content),assertError(!!dom,new ParserException("parseSchedule","!!dom (was undefined)"));const events=dom.querySelector("data > event");assertFatal(!!events,new ParserException("parseSchedule","!!events (was undefined)")),events.forEach((event=>{try{const lesson={},startDate=event.querySelector("start_date")[0]?.innerText();lesson.startDate=parseDate(startDate,"yyyy-MM-dd HH:mm"+(/:.*:/g.test(startDate)?":ss":""));const endDate=event.querySelector("end_date")[0]?.innerText();lesson.endDate=parseDate(endDate,"yyyy-MM-dd HH:mm"+(/:.*:/g.test(endDate)?":ss":"")),lesson.text=event.querySelector("text")[0]?.innerText(),lesson.comment=event.querySelector("kommentar")[0]?.innerText(),lesson.shortText=event.querySelector("fachkuerzel")[0]?.innerText(),lesson.subjectAbbreviation=event.querySelector("kurskuerzel")[0]?.innerText(),lesson.room=event.querySelector("zimmerkuerzel")[0]?.innerText(),lesson.color=event.querySelector("color")[0]?.innerText(),result.lessons?.push(lesson)}catch(exception){exception instanceof Exception?result.exceptions.push(exception):result.exceptions.push(new JavaScriptException("parseSchedule",""+exception))}}))}catch(exception){exception instanceof Exception?result.exceptions.push(exception):result.exceptions.push(new JavaScriptException("parseSchedule",""+exception))}return 0===result.lessons?.length&&(result.lessons=void 0),result}};class LinkResult extends class{constructor(){this.teachers=[],this.students=[],this.transactions=[],this.absences=[],this.absenceReports=[],this.openAbsences=[],this.lateAbsences=[],this.subjects=[],this.grades=[]}}{constructor(){super(...arguments),this.exceptions=[]}}function link(user){const result=new LinkResult,teacherTable={},subjectTable={},subjectIdTable=new Map,absenceIdTable=new Map;for(const teacher of user.teachers??[])teacherTable[teacher.abbreviation]=teacher;for(const subject of user.subjects??[])try{subjectTable[subject.abbreviation]=subject,subjectIdTable.set(subject.id,subject),assertFatal(!!subject.abbreviation,new LinkerException("Subjects",`!!subject.abbreviation (was ${null!=subject.abbreviation?"''":void 0})`));const[,,teacherAbbreviation]=subject.abbreviation.split("-");assertFatal(!!teacherAbbreviation,new LinkerException("Subjects",`!!teacherAbbreviation (was ${null!=teacherAbbreviation?"''":void 0})`));const teacher=teacherTable[teacherAbbreviation];assertInfo(!!teacher,new LinkerException("Subjects","!!teacher (was undefined)")),teacher&&(subject.teacherId=teacher.id)}catch(exception){exception instanceof Exception?result.exceptions.push(exception):result.exceptions.push(new JavaScriptException("link(Subjects)",""+exception))}for(const openAbsence of user.openAbsences??[])try{const subject=subjectTable[openAbsence.lessonAbbreviation];assertInfo(!!subject,new LinkerException("OpenAbsences","!!subject (was undefined)")),subject&&(openAbsence.subjectId=subject.id)}catch(exception){exception instanceof Exception?result.exceptions.push(exception):result.exceptions.push(new JavaScriptException("link(OpenAbsences)",""+exception))}for(const absence of user.absences??[])absenceIdTable.set(absence.id,absence);for(const absenceReport of user.absenceReports??[])try{const subject=subjectTable[absenceReport.lessonAbbreviation];assertInfo(!!subject,new LinkerException("AbsenceReports","!!subject (was undefined)")),subject&&(absenceReport.subjectId=subject.id)}catch(exception){exception instanceof Exception?result.exceptions.push(exception):result.exceptions.push(new JavaScriptException("link(AbsenceReports)",""+exception))}return Object.assign(result,user),result}(ObjectType=>{ObjectType[ObjectType.TEACHER=0]="TEACHER",ObjectType[ObjectType.STUDENT=1]="STUDENT",ObjectType[ObjectType.TRANSACTION=2]="TRANSACTION",ObjectType[ObjectType.ABSENCE=3]="ABSENCE",ObjectType[ObjectType.ABSENCE_REPORT=4]="ABSENCE_REPORT",ObjectType[ObjectType.OPEN_ABSENCE=5]="OPEN_ABSENCE",ObjectType[ObjectType.LATE_ABSENCE=6]="LATE_ABSENCE",ObjectType[ObjectType.SUBJECT=7]="SUBJECT",ObjectType[ObjectType.GRADE=8]="GRADE"})(ObjectType||(ObjectType={}));const IdenitityKeys={[ObjectType.TEACHER]:["lastName","firstName","abbreviation"],[ObjectType.STUDENT]:["lastName","firstName"],[ObjectType.TRANSACTION]:["date","reason"],[ObjectType.ABSENCE]:["startDate","endDate"],[ObjectType.ABSENCE_REPORT]:["startDate","endDate","lessonAbbreviation"],[ObjectType.OPEN_ABSENCE]:["startDate","endDate","lessonAbbreviation"],[ObjectType.LATE_ABSENCE]:["date","reason","timespan"],[ObjectType.SUBJECT]:["abbreviation"],[ObjectType.GRADE]:["date","topic"]},same=(first,second)=>{if(typeof first!=typeof second)return 0;if(first===second)return 1;if("object"==typeof first&&"object"==typeof second&&first&&second){if(!("$type"in first)||first.$type!=second.$type||typeof first.$type in ObjectType||!(first.$type in ObjectType))return 0;for(const key of IdenitityKeys[first.$type])if(!same(first[key],second[key]))return 0;return 1}return 0},CompareKeys={[ObjectType.TEACHER]:["email"],[ObjectType.STUDENT]:["gender","degree","bilingual","clazz","address","zip","city","phone","additionalClass","status"],[ObjectType.TRANSACTION]:["amount"],[ObjectType.ABSENCE]:["reason","additionalInfo","deadline","excused","lessonCount"],[ObjectType.ABSENCE_REPORT]:["comment"],[ObjectType.OPEN_ABSENCE]:[],[ObjectType.LATE_ABSENCE]:["excused"],[ObjectType.SUBJECT]:["name","gradesConfirmed","hiddenGrades","average"],[ObjectType.GRADE]:["grade","details","weight"]},equal=(first,second)=>{if(!same(first,second))return 0;if(null==first)return 1;if("object"!=typeof first)return 1;for(const key of CompareKeys[first.$type])if(!equal(first[key],second[key]))return 0;return 1};class DiffingResult{constructor(){this.added=[],this.modified=[],this.unchanged=[],this.removed=[]}}function diff(initial,updated){const result=new DiffingResult,firstArray=Array.isArray(initial)?[...initial]:[initial],secondArray=Array.isArray(updated)?[...updated]:[updated];for(let firstIndex=0;firstIndex<firstArray.length;firstIndex++)for(let secondIndex=0;secondIndex<secondArray.length;secondIndex++)if(same(firstArray[firstIndex],secondArray[secondIndex])){equal(firstArray[firstIndex],secondArray[secondIndex])?result.unchanged.push([firstArray[firstIndex],secondArray[secondIndex]]):result.modified.push([firstArray[firstIndex],secondArray[secondIndex]]),firstArray.splice(firstIndex,1),secondArray.splice(secondIndex,1),firstIndex--;break}return result.removed=firstArray,result.added=secondArray,result}